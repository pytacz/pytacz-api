<?php

namespace ApiBundle\Repository;

/**
 * NoteRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NoteRepository extends \Doctrine\ORM\EntityRepository
{
    public function findNote($id)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT n.id, n.name, n.content, n.askable FROM ApiBundle:Note n
            WHERE n.id = :id')
            ->setParameters([
                'id' => $id
            ]);
        return $query->getResult();
    }

    public function findAllSubNotes($noteId)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT sn.id, sn.name, sn.content, sn.askable FROM ApiBundle:SubNote sn
            JOIN sn.note n
            WHERE n.id = :id
            ORDER BY sn.id ASC')
            ->setParameters([
                'id' => $noteId
            ]);
        return $query->getResult();
    }

    public function countSubNotes($note)
    {
        $query = $this->getEntityManager()
            ->createQuery(
                'SELECT COUNT(sn.id) amount FROM ApiBundle:SubNote sn
            WHERE sn.note = :note')
            ->setParameters([
                'note' => $note
            ]);
        return $query->getResult();
    }

    public function findAllAskableSubNotes($noteId, $reverse)
    {
        if ($reverse === true) {
            $sqlData = 'SELECT sn.content';
        } else {
            $sqlData = 'SELECT sn.name';
        }
        $query = $this->getEntityManager()
            ->createQuery(
                $sqlData . ', sn.id FROM ApiBundle:SubNote sn
                JOIN sn.note n
                WHERE n.id = :id AND sn.askable = true
                ORDER BY sn.id ASC'
            )
            ->setParameters([
                'id' => $noteId
            ]);
        return $query->getResult();
    }

    public function findAnswersForSubNotes($noteId, $reverse)
    {
        if ($reverse === true) {
            $sqlData = 'SELECT sn.content as field, sn.name as answer';
        } else {
            $sqlData = 'SELECT sn.content as answer, sn.name as field';
        }
        $query = $this->getEntityManager()
            ->createQuery(
                $sqlData . ', sn.id FROM ApiBundle:SubNote sn
                JOIN sn.note n
                WHERE n.id = :id AND sn.askable = true
                ORDER BY sn.id ASC'
            )
            ->setParameters([
                'id' => $noteId
            ]);
        return $query->getResult();
    }
}
